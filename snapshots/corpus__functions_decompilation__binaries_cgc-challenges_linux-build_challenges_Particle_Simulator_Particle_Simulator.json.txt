{
  "4198400:_init": "extern struct_0 *g_406b44;\n
\n
int _init()\n
{\n
    if (g_406b44)\n
    {\n
        g_406b44();\n
        return;\n
    }\n
    return;\n
}\n
",
  "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
",
  "4198464:cgc_fabs": "// attributes: PLT stub\n
int cgc_fabs()\n
{\n
    ::libc.so.0::cgc_fabs();\n
    return;\n
}\n
",
  "4198480:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
",
  "4198496:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
",
  "4198512:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
",
  "4198528:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
",
  "4198544:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
",
  "4198560:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
",
  "4198576:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
",
  "4198592:cgc_sqrt": "// attributes: PLT stub\n
int cgc_sqrt()\n
{\n
    ::libc.so.0::cgc_sqrt();\n
    return;\n
}\n
",
  "4198608:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
",
  "4198624:sub_4010e0": "int sub_4010e0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
",
  "4198630:sub_4010e6": null,
  "4198640:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
",
  "4198683:sub_40111b": null,
  "4198684:sub_40111c": "int sub_40111c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
",
  "4198688:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
",
  "4198692:sub_401124": null,
  "4198704:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 23067;\n
    v6 = v5 + 15;\n
    v7 = v5 + 15;\n
    if (v7 == v6)\n
        return v5 + 15;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
",
  "4198755:sub_401163": "int sub_401163()\n
{\n
}\n
",
  "4198761:sub_401169": "int sub_401169()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
",
  "4198768:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 23003;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 15;\n
    v9 = (v6 + 15 - (v6 + 15) >> 31) + (15 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
",
  "4198839:sub_4011b7": "int sub_4011b7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
",
  "4198848:__do_global_dtors_aux": "extern unsigned int __dso_handle;\n
extern char completed.0;\n
extern unsigned int g_406b40;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (completed.0)\n
        return;\n
    if (g_406b40)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010e0();\n
    }\n
    deregister_tm_clones();\n
    completed.0 = 1;\n
    return;\n
}\n
",
  "4198923:sub_40120b": "int sub_40120b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
",
  "4198928:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
",
  "4198937:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
",
  "4198941:sub_40121d": null,
  "4198944:cgc_floor": null,
  "4199152:cgc_round_away_from_zero": null,
  "4199330:sub_4013a2": null,
  "4199344:cgc_round": null,
  "4199537:sub_401471": null,
  "4199552:cgc_putc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = \"4j\";\n
    v0 = &v2;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
",
  "4199644:sub_4014dc": null,
  "4199648:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v3 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v3 *= -1;\n
    }\n
    do\n
    {\n
        *(v1) = ((v3 >> 31 CONCAT v3) /m 10 >> 32) + 48;\n
        v5 = v3;\n
        v3 = (v5 >> 31 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
",
  "4199857:sub_4015b1": null,
  "4199872:cgc_float_to_str": null,
  "4200879:sub_4019af": null,
  "4200880:cgc_vprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v10, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x74]\n
    unsigned int v1;  // [bp-0x70]\n
    unsigned int v2;  // [bp-0x6c]\n
    struct_0 *v3;  // [bp-0x68], Other Possible Types: unsigned int\n
    unsigned long v4;  // [bp-0x64]\n
    struct_0 *v5;  // [bp-0x58], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x54]\n
    char v7;  // [bp-0x50]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0xc]\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax\n
\n
    v2 = \"4j\";\n
    v8 = 0;\n
    if (!v10)\n
    {\n
        v9 = -1;\n
        return v9;\n
    }\n
    while (true)\n
    {\n
        if (!*(v10))\n
        {\n
            v9 = v8;\n
            return v9;\n
        }\n
        else if (*(v10) != 64)\n
        {\n
            cgc_putc(*(v10));\n
            v10 += 1;\n
            v8 += 1;\n
        }\n
        else\n
        {\n
            v10 += 1;\n
            v1 = *(v10);\n
            if (!v1)\n
            {\n
                v9 = -1;\n
                return v9;\n
            }\n
            if (v1 == 64)\n
            {\n
                cgc_putc(64);\n
            }\n
            else if (v1 == 100)\n
            {\n
                v11 = a0;\n
                a0 = v11 + 1;\n
                v6 = *(v11);\n
                cgc_int_to_str(v6, &v7);\n
                for (v5 = &v7; *(v5); v5 += 1)\n
                {\n
                    cgc_putc(*(v5));\n
                    v8 += 1;\n
                }\n
            }\n
            else\n
            {\n
                if (v1 != 102)\n
                {\n
                    v9 = -1;\n
                    return v9;\n
                }\n
                v12 = a0;\n
                a0 = v12 + 2;\n
                *(&v4) = *(&v12);\n
                v0 = &v7;\n
                cgc_float_to_str();\n
                for (v3 = &v7; *(v3); v3 += 1)\n
                {\n
                    cgc_putc(*(v3));\n
                    v8 += 1;\n
                }\n
            }\n
            v10 += 1;\n
        }\n
    }\n
}\n
",
  "4201372:sub_401b9c": null,
  "4201376:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
",
  "4201434:sub_401bda": null,
  "4201440:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
",
  "4201534:sub_401c3e": null,
  "4201536:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
",
  "4201590:sub_401c76": null,
  "4201600:cgc_isnan": null,
  "4201627:sub_401c9b": null,
  "4201632:cgc_isinf": null,
  "4201695:sub_401cdf": null,
  "4201696:cgc_atof": "typedef struct struct_0 {\n
    unsigned long long field_-1b08;\n
    char padding_-1b00[32];\n
    unsigned long long field_-1ae0;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atof()\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    int tmp_43;  // tmp #43\n
    int tmp_45;  // tmp #45\n
    int tmp_44;  // tmp #44\n
    unsigned long v1;  // [bp-0x34]\n
    void* v2;  // [bp-0x2c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned long v4;  // [bp-0x24]\n
    unsigned long long v5;  // [bp-0x1c], Other Possible Types: unsigned long\n
    unsigned long long v6;  // [bp-0x14], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0x8]\n
    char v8;  // [bp-0x4]\n
    char *v9;  // [bp+0x4], Other Possible Types: unsigned int\n
    unsigned int v10;  // ebx\n
    int v11;  // 168, Other Possible Types: unsigned long long\n
    unsigned long long v12;  // xmm0\n
    int v13;  // xmm0\n
    int v15;  // xmm0\n
    unsigned int v17;  // ebp\n
\n
    v7 = v10;\n
    v0 = &\"4j\";\n
    if (!v9)\n
    {\n
        v6 = 0;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        v11 = 0;\n
        *(&v4) = *(&v0[143].padding_-1b00[8]);\n
        for (v3 = 1; cgc_isspace(*(v9)); v9 += 1);\n
        v2 = 0;\n
        while (true)\n
        {\n
            if (!*(v9))\n
            {\n
LABEL_401f06:\n
                *(&v11) = v3;\n
                xmm0<16> = (xmm0<16> * Conv(64->128, Load(addr=stack_base-28, size=8, endness=Iend_LE)))\n
                *(&v6) = v15;\n
                break;\n
            }\n
            else\n
            {\n
                if (*(v9) == 45)\n
                {\n
                    if (!v2)\n
                    {\n
                        v3 = -1;\n
                        v2 += 1;\n
                        goto LABEL_401edf;\n
                    }\n
                    else\n
                    {\n
                        *(&v6) = 0;\n
                        break;\n
                    }\n
                }\n
                if (*(v9) == 43)\n
                {\n
                    if (!v2)\n
                    {\n
                        v2 += 1;\n
                        goto LABEL_401edf;\n
                    }\n
                    else\n
                    {\n
                        *(&v6) = 0;\n
                        break;\n
                    }\n
                }\n
                if (*(v9) == 46)\n
                {\n
                    if (v2 && v2 != 1)\n
                    {\n
                        *(&v6) = 0;\n
                        break;\n
                    }\n
                    v2 = 2;\n
                    goto LABEL_401edf;\n
                }\n
                if (!cgc_isdigit(*(v9)))\n
                    goto LABEL_401f06;\n
                if (!v2)\n
                {\n
LABEL_401e4b:\n
                    v2 = 1;\n
                    v11 = (0 CONCAT *(&v5)) * (0 CONCAT *(&v0[144].padding_-1b00[0])) + (0 CONCAT *(v9) - 48);\n
                    *(&v5) = v11;\n
                    goto LABEL_401edf;\n
                }\n
                else\n
                {\n
                    if (v2 == 1)\n
                        goto LABEL_401e4b;\n
                    if (v2 == 2)\n
                    {\n
                        v12 = *(v9) - 48;\n
                        v13 = v11 * (0 CONCAT *(&v4));\n
                        *(&v5) = v13 + (0 CONCAT *(&v5));\n
                        tmp_43 = DivV(tmp_45, tmp_44);\n
                        v11 = tmp_43;\n
                        *(&v4) = v11;\n
                    }\n
                    else\n
                    {\n
                        *(&v6) = 0;\n
                        break;\n
                    }\n
LABEL_401edf:\n
                    v9 += 1;\n
                }\n
            }\n
        }\n
    }\n
    *(&v1) = *(&v6);\n
    if ([D] GetI(136:I8x8)[t11,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v17 = *(&v8);\n
    return;\n
}\n
",
  "4202280:sub_401f28": null,
  "4202288:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"4j\";\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 1;\n
    for (v1 = 0; cgc_isspace(*(v6)); v6 += 1);\n
    for (v2 = 0; *(v6); v6 += 1)\n
    {\n
        if (*(v6) == 45)\n
        {\n
            if (!v2)\n
            {\n
                v3 = -1;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v6) != 43)\n
            {\n
                if (!cgc_isdigit(*(v6)))\n
                    break;\n
                if (v2 && v2 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v2 = 1;\n
                v4 = v4 * 10 + *(v6) - 48;\n
                v1 += 1;\n
                if (v1 == 9)\n
                    break;\n
            }\n
            else if (!v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v4 * v3;\n
    return v5;\n
}\n
",
  "4202692:sub_4020c4": null,
  "4202704:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[a0]; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    v0[v1] = 0;\n
    return v1;\n
}\n
",
  "4202795:sub_40212b": null,
  "4202800:cgc_bzero": "int cgc_bzero(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v3 = v2;\n
    v0 = v3;\n
    if (!v2)\n
    {\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v3 = v1;\n
            if (v3 >= a0)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
",
  "4202908:sub_40219c": null,
  "4202912:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(v2) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
",
  "4203020:sub_40220c": null,
  "4203024:cgc_strncat": "int cgc_strncat(char *v5, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = v5;\n
    v3 = cgc_strlen();\n
    if (v5 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v2 < a1)\n
                v1 = a0[v2];\n
            if (!(v1 & 1))\n
                break;\n
            v5[v2 + v3] = a0[v2];\n
            v2 += 1;\n
        }\n
        v5[v2 + v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = v5;\n
    return v4;\n
}\n
",
  "4203219:sub_4022d3": null,
  "4203232:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
        return v0;\n
    for (v0 = 0; v0[v1]; v0 += 1);\n
    return v0;\n
}\n
",
  "4203309:sub_40232d": null,
  "4203312:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"4j\";\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
            return v4;\n
        v4[v5] = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (v2 == a0)\n
            return v4;\n
        v4[v5] = v2;\n
        v4 += 1;\n
    }\n
}\n
",
  "4203504:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"4j\";\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 && a0)\n
    {\n
        for (v1 = cgc_strlen(v3); v2[a0]; v2 += 1)\n
        {\n
            v3[v1] = v2[a0];\n
            v1 += 1;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    return v2;\n
}\n
",
  "4203663:sub_40248f": null,
  "4203664:cgc_itoa": "int cgc_itoa(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
        return v2;\n
    v0 = a0;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a1)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((v3 + v1)) = ((0 CONCAT a0) /m 10 >> 32) + 48;\n
        a0 = (0 CONCAT a0) /m 10;\n
        v1 -= 1;\n
    } while (a0);\n
    *((v3 + v2)) = 0;\n
    return v2;\n
}\n
",
  "4203863:sub_402557": null,
  "4203872:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = \"4j\";\n
    v2 = v5;\n
    v0 = &v3;\n
    v7 = v4;\n
    return cgc_transmit(1, v2, cgc_strlen(v5));\n
}\n
",
  "4203955:sub_4025b3": null,
  "4203968:cgc_init_render_grid": "typedef struct struct_0 {\n
    unsigned long long field_-1ac0;\n
    unsigned long long field_-1ab8;\n
    char padding_-1ab0[6920];\n
    unsigned int field_58;\n
    char padding_5c[4];\n
    unsigned long long field_60;\n
    unsigned long long field_68;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern void* g_renderGrid;\n
\n
int cgc_init_render_grid()\n
{\n
    unsigned int v0;  // [bp-0x54]\n
    int tmp_83;  // tmp #83\n
    int tmp_85;  // tmp #85\n
    int tmp_84;  // tmp #84\n
    int tmp_108;  // tmp #108\n
    int tmp_110;  // tmp #110\n
    int tmp_109;  // tmp #109\n
    struct_0 *v1;  // [bp-0x48]\n
    unsigned long v2;  // [bp-0x44]\n
    unsigned long v3;  // [bp-0x3c]\n
    unsigned long long *v4;  // [bp-0x30]\n
    unsigned long v5;  // [bp-0x2c]\n
    unsigned long v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v11;  // [bp-0xc]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    struct_0 *v15;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v16;  // eax\n
    unsigned int v19;  // ebx\n
\n
    v12 = v14;\n
    v1 = &\"4j\";\n
    v8 = 400;\n
    v7 = v8 * 20;\n
    g_renderGrid = 0;\n
    v0 = &v11;\n
    if (cgc_allocate(v7, 0))\n
        cgc__terminate();\n
    v15 = v1;\n
    *(&v15->padding_-1ab0[72]) = *(&v11);\n
    *(&v6) = *(&v15->padding_-1ab0[6832]);\n
    *(&v5) = *(&v15->padding_-1ab0[6832]);\n
    *(&v15->padding_-1ab0[80]) = *(&v6);\n
    *(&v15->padding_-1ab0[88]) = *(&v5);\n
    for (v10 = 0; v10 < 20; v10 = v15)\n
    {\n
        for (v9 = 0; v9 < 20; v9 += 1)\n
        {\n
            v16 = v1;\n
            v4 = v9 + v10 * 20;\n
            tmp_83 = SubV(tmp_85, tmp_84);\n
            *(&v3) = (0 CONCAT *(&v6)) * tmp_83 + (0 CONCAT *(&v16->padding_-1ab0[6824]));\n
            tmp_108 = SubV(tmp_110, tmp_109);\n
            *(&v2) = (0 CONCAT *(&v5)) * tmp_108 + (0 CONCAT *(&v16->padding_-1ab0[6824]));\n
            *((*(&v16->padding_-1ab0[72]) + v4 * 20)) = *(&v3);\n
            *((*(&v16->padding_-1ab0[72]) + v4 * 20 + 8)) = *(&v2);\n
            *((*(&v16->padding_-1ab0[72]) + v4 * 20 + 16)) = 0;\n
        }\n
        v15 = &v10->field_-1ac0 + 1;\n
    }\n
    v19 = v12;\n
    return v15;\n
}\n
",
  "4204372:sub_402754": null,
  "4204384:cgc_clear_render_grid": "typedef struct struct_0 {\n
    char padding_0[88];\n
    unsigned int field_58;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_clear_render_grid()\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v5 = \"4j\";\n
    v0 = &\"4j\";\n
    for (v3 = 0; v3 < 20; v3 = v5)\n
    {\n
        for (v2 = 0; v2 < 20; v2 += 1)\n
        {\n
            v1 = v3 * 20 + v2;\n
            *((v0->field_58 + v1 * 20 + 16)) = 0;\n
        }\n
        v5 = &v3->padding_0[1];\n
    }\n
    return v5;\n
}\n
",
  "4204509:sub_4027dd": null,
  "4204512:cgc_add_render_grid": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern unsigned int g_renderGrid;\n
\n
int cgc_add_render_grid(unsigned int v4)\n
{\n
    int tmp_138;  // tmp #138\n
    int tmp_140;  // tmp #140\n
    int tmp_139;  // tmp #139\n
    int tmp_158;  // tmp #158\n
    int tmp_160;  // tmp #160\n
    int tmp_159;  // tmp #159\n
    int tmp_171;  // tmp #171\n
    int tmp_173;  // tmp #173\n
    int tmp_172;  // tmp #172\n
    int tmp_188;  // tmp #188\n
    int tmp_190;  // tmp #190\n
    int tmp_189;  // tmp #189\n
    int tmp_212;  // tmp #212\n
    int tmp_214;  // tmp #214\n
    int tmp_213;  // tmp #213\n
    int tmp_229;  // tmp #229\n
    int tmp_231;  // tmp #231\n
    int tmp_230;  // tmp #230\n
    int tmp_249;  // tmp #249\n
    int tmp_251;  // tmp #251\n
    int tmp_250;  // tmp #250\n
    int tmp_266;  // tmp #266\n
    int tmp_268;  // tmp #268\n
    int tmp_267;  // tmp #267\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v6;  // ecx\n
    unsigned int v9;  // ecx\n
    unsigned int v12;  // ecx\n
    unsigned int v15;  // ecx\n
    struct_0 *v17;  // eax\n
\n
    tmp_138 = SubV(tmp_140, tmp_139);\n
    v6 = tmp_138;\n
    tmp_158 = SubV(tmp_160, tmp_159);\n
    v3 = v6 | tmp_158 & v6 >> 31;\n
    tmp_171 = SubV(tmp_173, tmp_172);\n
    v9 = tmp_171;\n
    tmp_188 = SubV(tmp_190, tmp_189);\n
    v2 = v9 | tmp_188 & v9 >> 31;\n
    tmp_212 = DivV(tmp_214, tmp_213);\n
    v12 = tmp_212;\n
    tmp_229 = SubV(tmp_231, tmp_230);\n
    v1 = v12 | tmp_229 & v12 >> 31;\n
    tmp_249 = DivV(tmp_251, tmp_250);\n
    v15 = tmp_249;\n
    tmp_266 = SubV(tmp_268, tmp_267);\n
    v0 = v15 | tmp_266 & v15 >> 31;\n
    v17 = g_renderGrid + (v1 * 20 + v0) * 20;\n
    v17->field_10 = v17->field_10 + 1;\n
    return g_renderGrid + (v1 * 20 + v0) * 20;\n
}\n
",
  "4204775:sub_4028e7": null,
  "4204784:cgc_display_render_grid": "typedef struct struct_0 {\n
    char padding_0[88];\n
    unsigned int field_58;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_display_render_grid()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v6;  // ebx\n
\n
    v1 = &\"4j\";\n
    for (v3 = 0; v3 < 20; v3 += 1)\n
    {\n
        cgc_printf(&v1[74].padding_0[8]);\n
    }\n
    cgc_printf(&v1[67].padding_0[51]);\n
    for (v3 = 20; v3 > 0; v3 -= 1)\n
    {\n
        for (v4 = 0; v4 < 20; v4 += 1)\n
        {\n
            v6 = v1;\n
            v2 = v4 * 20 + v3 - 1;\n
            v0 = *((v6->field_58 + v2 * 20 + 16));\n
            cgc_printf(&v6[74].padding_0[6]);\n
        }\n
        cgc_printf(&v1[67].padding_0[51]);\n
    }\n
    for (v4 = 0; v4 < 20; v4 += 1)\n
    {\n
        cgc_printf(&v1[74].padding_0[8]);\n
    }\n
    return cgc_printf(&v1[67].padding_0[51]);\n
}\n
",
  "4205072:cgc_readLine": "typedef struct struct_0 {\n
    char padding_0[68];\n
    unsigned int field_44;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_readLine(unsigned int v7, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    struct_0 *v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x12]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v1 = &\"4j\";\n
    for (v5 = 1; v5 < a1; v5 += 1)\n
    {\n
        v0 = &v2;\n
        v3 = cgc_receive(v7, &v4, 1);\n
        if (v3)\n
        {\n
            v1->field_44 = v3;\n
            v6 = -1;\n
            return v6;\n
        }\n
        if (v4 == 10)\n
            break;\n
        *(a0) = v4;\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    v6 = v5;\n
    return v6;\n
}\n
",
  "4205269:sub_402ad5": null,
  "4205280:cgc_parse_float_pair": null,
  "4205692:sub_402c7c": null,
  "4205696:main": null,
  "4207168:cgc_simulation_add_particle": null,
  "4208269:sub_40368d": null,
  "4208272:cgc_is_colliding": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
int cgc_is_colliding(struct_0 *v6, struct_0 *a0)\n
{\n
    int tmp_57;  // tmp #57\n
    int tmp_58;  // tmp #58\n
    int tmp_55;  // tmp #55\n
    int tmp_75;  // tmp #75\n
    int tmp_76;  // tmp #76\n
    int tmp_73;  // tmp #73\n
    unsigned long v0;  // [bp-0x34]\n
    unsigned long v1;  // [bp-0x2c]\n
    unsigned long v2;  // [bp-0x24]\n
    unsigned long v3;  // [bp-0x1c]\n
    unsigned long v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x8]\n
    int v8;  // xmm0\n
\n
    tmp_57 = SubV(tmp_58, tmp_55);\n
    *(&v4) = tmp_57;\n
    tmp_75 = SubV(tmp_76, tmp_73);\n
    v8 = tmp_75;\n
    *(&v3) = v8;\n
    s_24 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=(Load(addr=stack_base+4, size=4, endness=Iend_LE) + 0x28<32>), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=(Load(addr=stack_base+8, size=4, endness=Iend_LE) + 0x28<32>), size=8, endness=Iend_LE))))<8>\n
    s_2c =L Conv(128->64, (((0x0<64> CONCAT Load(addr=stack_base-20, size=8, endness=Iend_LE)) * (0x0<64> CONCAT Load(addr=stack_base-20, size=8, endness=Iend_LE))) + ((0x0<64> CONCAT Load(addr=stack_base-28, size=8, endness=Iend_LE)) * Conv(64->128, Load(addr=stack_base-28, size=8, endness=Iend_LE)))))<8>\n
    s_34 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base-36, size=8, endness=Iend_LE)) * Conv(64->128, Load(addr=stack_base-36, size=8, endness=Iend_LE))))<8>\n
    *(&v8) = *(&v0);\n
    if (((CmpF(v8, *(&v1)) & 69 | ((CmpF(v8, *(&v1)) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    v5 = 0;\n
    return v5;\n
}\n
",
  "4208440:sub_403738": null,
  "4208448:cgc_simulation_reset": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern void* cgc_g_particleCount;\n
\n
int cgc_simulation_reset()\n
{\n
    cgc_g_particleCount = 0;\n
    return \"4j\";\n
}\n
",
  "4208475:sub_40375b": null,
  "4208480:cgc_do_collision": null,
  "4209667:sub_403c03": null,
  "4209680:cgc_do_wall_collision": "typedef struct struct_0 {\n
    uint128_t field_-1b30;\n
    char padding_-1b20[104];\n
    unsigned long long field_-1ab8;\n
    char padding_-1ab0[504];\n
    unsigned long long field_-18b8;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_wall_collision(unsigned long long v11[6])\n
{\n
    struct_0 *v0;  // [bp-0x68]\n
    int tmp_74;  // tmp #74\n
    int tmp_75;  // tmp #75\n
    int tmp_72;  // tmp #72\n
    int tmp_110;  // tmp #110\n
    int tmp_111;  // tmp #111\n
    int tmp_108;  // tmp #108\n
    int tmp_24;  // tmp #24\n
    int tmp_26;  // tmp #26\n
    int tmp_25;  // tmp #25\n
    int tmp_40;  // tmp #40\n
    int tmp_42;  // tmp #42\n
    int tmp_41;  // tmp #41\n
    int tmp_27;  // tmp #27\n
    int tmp_44;  // tmp #44\n
    int tmp_43;  // tmp #43\n
    unsigned long v1;  // [bp-0x64]\n
    unsigned long v2;  // [bp-0x5c]\n
    int v3;  // [bp-0x54], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x4c]\n
    unsigned long v5;  // [bp-0x44]\n
    unsigned long v6;  // [bp-0x2c]\n
    unsigned long v7;  // [bp-0x24]\n
    unsigned long v8;  // [bp-0x1c]\n
    unsigned long v9;  // [bp-0x14]\n
    unsigned long v10;  // [bp-0xc]\n
    int v13;  // xmm0, Other Possible Types: unsigned long\n
    int v15;  // xmm0, Other Possible Types: unsigned long\n
    int v19;  // xmm0\n
    struct_0 *v20;  // eax, Other Possible Types: unsigned long long [6], unsigned int\n
\n
    v0 = &\"4j\";\n
    s_c =L Conv(128->64, ((0x0<64> CONCAT Load(addr=Load(addr=stack_base+4, size=4, endness=Iend_LE), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=(Load(addr=stack_base+4, size=4, endness=Iend_LE) + 0x28<32>), size=8, endness=Iend_LE))))<8>\n
    tmp_74 = SubV(tmp_75, tmp_72);\n
    *(&v9) = tmp_74;\n
    s_1c =L Conv(128->64, ((0x0<64> CONCAT Load(addr=(Load(addr=stack_base+4, size=4, endness=Iend_LE) + 0x8<32>), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=(Load(addr=stack_base+4, size=4, endness=Iend_LE) + 0x28<32>), size=8, endness=Iend_LE))))<8>\n
    tmp_110 = SubV(tmp_111, tmp_108);\n
    v13 = tmp_110;\n
    *(&v7) = v13;\n
    *(&v13) = *(&v10);\n
    if (((CmpF(v13, 0x4069000000000000) & 69 | ((CmpF(v13, 0x4069000000000000) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_24 = SubV(tmp_26, tmp_25);\n
        *(&v6) = tmp_24;\n
        tmp_40 = SubV(tmp_42, tmp_41);\n
        v13 = tmp_40;\n
        *(&v13) = v13;\n
        v11[0] = *(&v13);\n
        *(&v13) = v11[2];\n
        if (((CmpF(v19, 0) & 69 | ((CmpF(v19, 0) & 69) >> 6)) & 1) != 1)\n
            v11[2] = (0 CONCAT v11[2]) ^ *(&v0[10].padding_-1ab0[432]);\n
    }\n
    *(&v13) = *(&v0[10].padding_-1ab0[312]);\n
    if (((CmpF(v13, *(&v9)) & 69 | ((CmpF(v13, *(&v9)) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_26 = SubV(tmp_27, tmp_24);\n
        v15 = tmp_26;\n
        *(&v15) = v15;\n
        *(&v5) = (0 CONCAT *(&v15)) * 2 + (0 CONCAT v11[0]);\n
        v11[0] = *(&v5);\n
        if (((CmpF(0, v11[2]) & 69 | ((CmpF(0, v11[2]) & 69) >> 6)) & 1) != 1)\n
            v11[2] = (0 CONCAT v11[2]) ^ *(&v0[10].padding_-1ab0[432]);\n
    }\n
    *(&v15) = *(&v8);\n
    if (((CmpF(v15, *(&v0[9].padding_-1ab0[440])) & 69 | ((CmpF(v15, *(&v0[9].padding_-1ab0[440])) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_24 = SubV(tmp_26, tmp_25);\n
        *(&v4) = tmp_24;\n
        tmp_42 = SubV(tmp_44, tmp_43);\n
        v19 = tmp_42;\n
        *(&v3) = v19;\n
        v11[1] = *(&v3);\n
        *(&v19) = v11[3];\n
        if (((CmpF(v19, 0) & 69 | ((CmpF(v19, 0) & 69) >> 6)) & 1) != 1)\n
            v11[3] = (0 CONCAT v11[3]) ^ *(&v0[10].padding_-1ab0[432]);\n
    }\n
    v20 = v0;\n
    *(&v3) = *(&v20[10].padding_-1ab0[312]);\n
    if (((CmpF(v3, *(&v7)) & 69 | ((CmpF(v3, *(&v7)) & 69) >> 6)) & 1) == 1)\n
        return v0;\n
    tmp_26 = SubV(tmp_27, tmp_24);\n
    *(&v2) = tmp_26;\n
    *(&v1) = (0 CONCAT *(&v2)) * 2 + (0 CONCAT v11[1]);\n
    v11[1] = *(&v1);\n
    v20 = v11;\n
    if (((CmpF(0, v20[3]) & 69 | ((CmpF(0, v20[3]) & 69) >> 6)) & 1) == 1)\n
        return v20;\n
    v20 = v11;\n
    v20[3] = (0 CONCAT v11[3]) ^ *(&v0[10].padding_-1ab0[432]);\n
}\n
",
  "4210344:sub_403ea8": null,
  "4210352:cgc_simulation_run": null,
  "4211393:sub_4042c1": null,
  "4211408:cgc_get_collision_count": "extern unsigned int cgc_g_collisionTotal;\n
\n
int cgc_get_collision_count()\n
{\n
    return cgc_g_collisionTotal;\n
}\n
",
  "4211431:sub_4042e7": null,
  "4211440:cgc_get_simulation_time": "extern unsigned int cgc_g_simulationTime;\n
\n
int cgc_get_simulation_time()\n
{\n
    return cgc_g_simulationTime;\n
}\n
",
  "4211463:sub_404307": null,
  "4211472:cgc_get_simulation_frames": "extern unsigned int cgc_g_simulationFrames;\n
\n
int cgc_get_simulation_frames()\n
{\n
    return cgc_g_simulationFrames;\n
}\n
",
  "4211495:sub_404327": null,
  "4211504:cgc_display_simulation_data": "typedef struct struct_0 {\n
    char padding_0[72];\n
    struct struct_1 *field_48;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_display_simulation_data()\n
{\n
    unsigned long long *v0;  // [bp-0x78]\n
    unsigned long v1;  // [bp-0x74]\n
    unsigned long v2;  // [bp-0x6c]\n
    unsigned long v3;  // [bp-0x64]\n
    unsigned long v4;  // [bp-0x5c]\n
    unsigned long v5;  // [bp-0x54]\n
    unsigned long v6;  // [bp-0x4c]\n
    struct_0 *v7;  // [bp-0x40]\n
    unsigned long v8;  // [bp-0x3c]\n
    unsigned long v9;  // [bp-0x34]\n
    unsigned long v10;  // [bp-0x2c]\n
    unsigned long v11;  // [bp-0x24]\n
    unsigned long v12;  // [bp-0x1c]\n
    unsigned long v13;  // [bp-0x14]\n
    unsigned long long *v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v15;  // [bp-0x8]\n
    unsigned int v17;  // ebx\n
    struct_0 *v18;  // ebx\n
    struct_0 *v19;  // ebx\n
    unsigned int v20;  // ebx\n
\n
    v15 = v17;\n
    v7 = &\"4j\";\n
    cgc_clear_render_grid();\n
    v18 = v7;\n
    v0 = &v18->field_48->field_0;\n
    cgc_printf(&v18[82].padding_0[64]);\n
    for (v14 = 0; v14 < v7->field_48; v14 = v14 + 1)\n
    {\n
        v19 = v7;\n
        *(&v13) = *((112 + &v19->padding_0[0] + 0x30 * v14));\n
        *(&v12) = *((120 + &v19->padding_0[0] + 0x30 * v14));\n
        *(&v11) = *((128 + &v19->padding_0[0] + 0x30 * v14));\n
        *(&v10) = *((136 + &v19->padding_0[0] + 0x30 * v14));\n
        *(&v9) = *((144 + &v19->padding_0[0] + 0x30 * v14));\n
        *(&v8) = *((152 + &v19->padding_0[0] + 0x30 * v14));\n
        v0 = v14;\n
        *(&v1) = *(&v13);\n
        *(&v2) = *(&v12);\n
        *(&v3) = *(&v11);\n
        *(&v4) = *(&v10);\n
        *(&v5) = *(&v9);\n
        *(&v6) = *(&v8);\n
        cgc_printf(&v19[82].padding_0[43]);\n
        cgc_add_render_grid(&v7[1].padding_0[36] + 0x30 * v14);\n
    }\n
    v20 = v15;\n
    return cgc_display_render_grid();\n
}\n
",
  "4211856:_fini": "int _fini()\n
{\n
    return;\n
}\n
",
  "5242880:cgc_fabs": null,
  "5242884:cgc_pow": null,
  "5242888:__libc_start_main": null,
  "5242892:cgc__terminate": null,
  "5242896:cgc_transmit": null,
  "5242900:cgc_allocate": null,
  "5242904:cgc_rint": null,
  "5242908:cgc_log10": null,
  "5242912:cgc_sqrt": null,
  "5242916:cgc_receive": null,
  "6295628:UnresolvableJumpTarget": null,
  "6295632:UnresolvableCallTarget": null
}
